version: '3'

services:

#    build: .
#    ports:
#      - "5000:5000"
#  volumes:
#    - .:/go/src/go-with-compose
#  working_dir: /go/src/go-with-compose


  mongodb:
    image: "mongo:latest"
    container_name: "mongodb"
    environment: 
      - MONGO_INITDB_DATABASE=kittapa
      - MONGO_INITDB_ROOT_USERNAME=kittapa
      - MONGO_INITDB_ROOT_PASSWORD=hello
    # hostname: mongodb
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongo-volume:/data/db
    ports: 
      - '27017:27017'
    networks:
      - backend

  mongoclient:
    image: mongoclient/mongoclient:2.2.0
    container_name: mongoclient
    hostname: mongoclient
    depends_on:
      - mongodb
    ports:
      - 3000:3000

  redis:
    image: redis:alpine3.13
    container_name: redisdb
    volumes:
      - "$PWD/config/redis.conf:/redis.conf"
    ports:
      - 6379:6379
  app:
#    image: golang:1.6-alpine
    build:
      context: . # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - mongodb # This service depends on redis. Start that first.
    environment: # Pass environment variables to the service
      MONGO_URL: mongodb:27017
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend

networks:
  backend: